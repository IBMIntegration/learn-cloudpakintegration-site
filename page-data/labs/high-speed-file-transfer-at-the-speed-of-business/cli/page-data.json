{"componentChunkName":"component---src-pages-labs-high-speed-file-transfer-at-the-speed-of-business-cli-mdx","path":"/labs/high-speed-file-transfer-at-the-speed-of-business/cli/","result":{"pageContext":{"frontmatter":{"title":"Aspera CLI","description":"Think Lab 5352 - Aspera CLI","tabs":["Prerequisites","CLI","Client & CP4I","Connect & AoC","Node API","Cloud to Cloud","Distribution"]},"relativePagePath":"/labs/high-speed-file-transfer-at-the-speed-of-business/cli.mdx","titleType":"page","MdxNode":{"id":"03a266a5-417d-5a63-a46d-740b7f901670","children":[],"parent":"f7f2c6bb-df5e-5d95-9f73-88068353470a","internal":{"content":"---\ntitle: Aspera CLI\ndescription: Think Lab 5352 - Aspera CLI\ntabs:\n  [\n    'Prerequisites',\n    'CLI',\n    'Client & CP4I',\n    'Connect & AoC',\n    'Node API',\n    'Cloud to Cloud',\n    'Distribution',\n  ]\n---\n\nexport const Title = () => <span>High Speed File Transfer at the Speed of Business</span>\n\n<h2 style={{color: 'red'}}>DRAFT</h2>\n\n## Aspera ascp CLI\n\nAspera began as a command line tool called `ascp`. In this first section we will start by\nusing the `ascp` CLI to download a file from the Aspera hosted Demo Server.\n\n![Aspera Native Client](./images/native-client.png)\n\n## Using the ascp CLI\n\n1. Navigate back to your Terminal window and ensure you are in the `/home/ibmuser`\n   directory by running `pwd`.\n\n1. Execute the following command to download the file named '100MB' from the Aspera Demo\n   Server:\n\n   `ascp -O 33001 -P 33001 -l 100M aspera@demo.asperasoft.com:/aspera-test-dir-large/100MB /home/ibmuser`\n\n   When prompted for the password enter: `demoaspera`\n\n   Note: `-O` sets the UDP port, `-P` sets the SSH port & `-l` sets the Target Rate\n\n   ![CLI Download Output](./images/cli-download.png)\n\nThe file named `100MB` has now been download to the `/home/ibmuser` directory. You can\n`ls -lh` to see the new file.\n\n## Scripting the ascp CLI\n\nThe `ascp` CLI is a flexible option for initiating FASP transfers. The CLI can easily be\nused in new or existing scripts to replace tools like; scp, ftp, sftp, rsync and other\nsimilar tcp based protocols to improve transfer performance and management capabilities.\nLets look at a quick example of how easy it is to use `ascp` in a script:\n\n1. Export the password as an environment variable so the script can run without user\n   interaction:\n\n   `export ASPERA_SCP_PASS=demoaspera`.\n\n   **Note:** This is not compulsory however if you do not export the password you will be\n   prompted for the password each time the script is executed. You also have the option of\n   configuring SSH Key based authentication.\n\n1. Execute the `download100MB.sh` script in the `/home/ibmuser` directory by running:\n\n   `/home/ibmuser/download100MB.sh`\n\n   ![CLI Download Script](./images/cli-download-script.png)\n\n   You will notice this time the file gets `skipped`. If you look at the command being run\n   in the script (`cat /home/ibmuser/download100MB.sh`) there is an additional option\n   added `-k 1` which tells ascp to only re-download/resume a file download if file\n   attributes are different. You can read more about resume-level (-k) and other options\n   with `man ascp`.\n\n## Recap\n\nYou have just downloaded a file from the Aspera Demo Server using the Aspera `ascp` CLI\nboth directly and in a script.\n\nThese download commands are simple when you know what file is available for download. What\nhappens when users are not familiar with the structure of the remote filesystem? Next up\nwe will look at improving the end-user experience using the native Aspera Client GUI.\n","type":"Mdx","contentDigest":"fb4f4b25bff398752f3dbb3b372f3794","counter":144,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Aspera CLI","description":"Think Lab 5352 - Aspera CLI","tabs":["Prerequisites","CLI","Client & CP4I","Connect & AoC","Node API","Cloud to Cloud","Distribution"]},"exports":{},"rawBody":"---\ntitle: Aspera CLI\ndescription: Think Lab 5352 - Aspera CLI\ntabs:\n  [\n    'Prerequisites',\n    'CLI',\n    'Client & CP4I',\n    'Connect & AoC',\n    'Node API',\n    'Cloud to Cloud',\n    'Distribution',\n  ]\n---\n\nexport const Title = () => <span>High Speed File Transfer at the Speed of Business</span>\n\n<h2 style={{color: 'red'}}>DRAFT</h2>\n\n## Aspera ascp CLI\n\nAspera began as a command line tool called `ascp`. In this first section we will start by\nusing the `ascp` CLI to download a file from the Aspera hosted Demo Server.\n\n![Aspera Native Client](./images/native-client.png)\n\n## Using the ascp CLI\n\n1. Navigate back to your Terminal window and ensure you are in the `/home/ibmuser`\n   directory by running `pwd`.\n\n1. Execute the following command to download the file named '100MB' from the Aspera Demo\n   Server:\n\n   `ascp -O 33001 -P 33001 -l 100M aspera@demo.asperasoft.com:/aspera-test-dir-large/100MB /home/ibmuser`\n\n   When prompted for the password enter: `demoaspera`\n\n   Note: `-O` sets the UDP port, `-P` sets the SSH port & `-l` sets the Target Rate\n\n   ![CLI Download Output](./images/cli-download.png)\n\nThe file named `100MB` has now been download to the `/home/ibmuser` directory. You can\n`ls -lh` to see the new file.\n\n## Scripting the ascp CLI\n\nThe `ascp` CLI is a flexible option for initiating FASP transfers. The CLI can easily be\nused in new or existing scripts to replace tools like; scp, ftp, sftp, rsync and other\nsimilar tcp based protocols to improve transfer performance and management capabilities.\nLets look at a quick example of how easy it is to use `ascp` in a script:\n\n1. Export the password as an environment variable so the script can run without user\n   interaction:\n\n   `export ASPERA_SCP_PASS=demoaspera`.\n\n   **Note:** This is not compulsory however if you do not export the password you will be\n   prompted for the password each time the script is executed. You also have the option of\n   configuring SSH Key based authentication.\n\n1. Execute the `download100MB.sh` script in the `/home/ibmuser` directory by running:\n\n   `/home/ibmuser/download100MB.sh`\n\n   ![CLI Download Script](./images/cli-download-script.png)\n\n   You will notice this time the file gets `skipped`. If you look at the command being run\n   in the script (`cat /home/ibmuser/download100MB.sh`) there is an additional option\n   added `-k 1` which tells ascp to only re-download/resume a file download if file\n   attributes are different. You can read more about resume-level (-k) and other options\n   with `man ascp`.\n\n## Recap\n\nYou have just downloaded a file from the Aspera Demo Server using the Aspera `ascp` CLI\nboth directly and in a script.\n\nThese download commands are simple when you know what file is available for download. What\nhappens when users are not familiar with the structure of the remote filesystem? Next up\nwe will look at improving the end-user experience using the native Aspera Client GUI.\n","fileAbsolutePath":"/Users/ryan/repos/gatsby/learn-cloudpakintegration-site/src/pages/labs/high-speed-file-transfer-at-the-speed-of-business/cli.mdx"}}}}